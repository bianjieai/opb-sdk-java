// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: cosmos/tx/signing/v1beta1/signing.proto

package proto.cosmos.tx.signing.v1beta1;

public final class Signing {
  private Signing() {}
  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistryLite registry) {
  }

  public static void registerAllExtensions(
      com.google.protobuf.ExtensionRegistry registry) {
    registerAllExtensions(
        (com.google.protobuf.ExtensionRegistryLite) registry);
  }
  /**
   * <pre>
   * SignMode represents a signing mode with its own security guarantees.
   * </pre>
   *
   * Protobuf enum {@code cosmos.tx.signing.v1beta1.SignMode}
   */
  public enum SignMode
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
     * rejected
     * </pre>
     *
     * <code>SIGN_MODE_UNSPECIFIED = 0;</code>
     */
    SIGN_MODE_UNSPECIFIED(0),
    /**
     * <pre>
     * SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
     * verified with raw bytes from Tx
     * </pre>
     *
     * <code>SIGN_MODE_DIRECT = 1;</code>
     */
    SIGN_MODE_DIRECT(1),
    /**
     * <pre>
     * SIGN_MODE_TEXTUAL is a future signing mode that will verify some
     * human-readable textual representation on top of the binary representation
     * from SIGN_MODE_DIRECT
     * </pre>
     *
     * <code>SIGN_MODE_TEXTUAL = 2;</code>
     */
    SIGN_MODE_TEXTUAL(2),
    /**
     * <pre>
     * SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
     * Amino JSON and will be removed in the future
     * </pre>
     *
     * <code>SIGN_MODE_LEGACY_AMINO_JSON = 127;</code>
     */
    SIGN_MODE_LEGACY_AMINO_JSON(127),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * SIGN_MODE_UNSPECIFIED specifies an unknown signing mode and will be
     * rejected
     * </pre>
     *
     * <code>SIGN_MODE_UNSPECIFIED = 0;</code>
     */
    public static final int SIGN_MODE_UNSPECIFIED_VALUE = 0;
    /**
     * <pre>
     * SIGN_MODE_DIRECT specifies a signing mode which uses SignDoc and is
     * verified with raw bytes from Tx
     * </pre>
     *
     * <code>SIGN_MODE_DIRECT = 1;</code>
     */
    public static final int SIGN_MODE_DIRECT_VALUE = 1;
    /**
     * <pre>
     * SIGN_MODE_TEXTUAL is a future signing mode that will verify some
     * human-readable textual representation on top of the binary representation
     * from SIGN_MODE_DIRECT
     * </pre>
     *
     * <code>SIGN_MODE_TEXTUAL = 2;</code>
     */
    public static final int SIGN_MODE_TEXTUAL_VALUE = 2;
    /**
     * <pre>
     * SIGN_MODE_LEGACY_AMINO_JSON is a backwards compatibility mode which uses
     * Amino JSON and will be removed in the future
     * </pre>
     *
     * <code>SIGN_MODE_LEGACY_AMINO_JSON = 127;</code>
     */
    public static final int SIGN_MODE_LEGACY_AMINO_JSON_VALUE = 127;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SignMode valueOf(int value) {
      return forNumber(value);
    }

    public static SignMode forNumber(int value) {
      switch (value) {
        case 0: return SIGN_MODE_UNSPECIFIED;
        case 1: return SIGN_MODE_DIRECT;
        case 2: return SIGN_MODE_TEXTUAL;
        case 127: return SIGN_MODE_LEGACY_AMINO_JSON;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SignMode>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SignMode> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SignMode>() {
            public SignMode findValueByNumber(int number) {
              return SignMode.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return proto.cosmos.tx.signing.v1beta1.Signing.getDescriptor().getEnumTypes().get(0);
    }

    private static final SignMode[] VALUES = values();

    public static SignMode valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SignMode(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:cosmos.tx.signing.v1beta1.SignMode)
  }

  public interface SignatureDescriptorsOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.tx.signing.v1beta1.SignatureDescriptors)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * signatures are the signature descriptors
     * </pre>
     *
     * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
     */
    java.util.List<proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor> 
        getSignaturesList();
    /**
     * <pre>
     * signatures are the signature descriptors
     * </pre>
     *
     * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
     */
    proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor getSignatures(int index);
    /**
     * <pre>
     * signatures are the signature descriptors
     * </pre>
     *
     * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
     */
    int getSignaturesCount();
    /**
     * <pre>
     * signatures are the signature descriptors
     * </pre>
     *
     * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
     */
    java.util.List<? extends proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptorOrBuilder> 
        getSignaturesOrBuilderList();
    /**
     * <pre>
     * signatures are the signature descriptors
     * </pre>
     *
     * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
     */
    proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptorOrBuilder getSignaturesOrBuilder(
        int index);
  }
  /**
   * <pre>
   * SignatureDescriptors wraps multiple SignatureDescriptor's.
   * </pre>
   *
   * Protobuf type {@code cosmos.tx.signing.v1beta1.SignatureDescriptors}
   */
  public  static final class SignatureDescriptors extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.tx.signing.v1beta1.SignatureDescriptors)
      SignatureDescriptorsOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignatureDescriptors.newBuilder() to construct.
    private SignatureDescriptors(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignatureDescriptors() {
      signatures_ = java.util.Collections.emptyList();
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignatureDescriptors(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
                signatures_ = new java.util.ArrayList<proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor>();
                mutable_bitField0_ |= 0x00000001;
              }
              signatures_.add(
                  input.readMessage(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.parser(), extensionRegistry));
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
          signatures_ = java.util.Collections.unmodifiableList(signatures_);
        }
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptors_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptors_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors.class, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors.Builder.class);
    }

    public static final int SIGNATURES_FIELD_NUMBER = 1;
    private java.util.List<proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor> signatures_;
    /**
     * <pre>
     * signatures are the signature descriptors
     * </pre>
     *
     * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
     */
    public java.util.List<proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor> getSignaturesList() {
      return signatures_;
    }
    /**
     * <pre>
     * signatures are the signature descriptors
     * </pre>
     *
     * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
     */
    public java.util.List<? extends proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptorOrBuilder> 
        getSignaturesOrBuilderList() {
      return signatures_;
    }
    /**
     * <pre>
     * signatures are the signature descriptors
     * </pre>
     *
     * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
     */
    public int getSignaturesCount() {
      return signatures_.size();
    }
    /**
     * <pre>
     * signatures are the signature descriptors
     * </pre>
     *
     * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
     */
    public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor getSignatures(int index) {
      return signatures_.get(index);
    }
    /**
     * <pre>
     * signatures are the signature descriptors
     * </pre>
     *
     * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
     */
    public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptorOrBuilder getSignaturesOrBuilder(
        int index) {
      return signatures_.get(index);
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      for (int i = 0; i < signatures_.size(); i++) {
        output.writeMessage(1, signatures_.get(i));
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      for (int i = 0; i < signatures_.size(); i++) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, signatures_.get(i));
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors)) {
        return super.equals(obj);
      }
      proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors other = (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors) obj;

      boolean result = true;
      result = result && getSignaturesList()
          .equals(other.getSignaturesList());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (getSignaturesCount() > 0) {
        hash = (37 * hash) + SIGNATURES_FIELD_NUMBER;
        hash = (53 * hash) + getSignaturesList().hashCode();
      }
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * SignatureDescriptors wraps multiple SignatureDescriptor's.
     * </pre>
     *
     * Protobuf type {@code cosmos.tx.signing.v1beta1.SignatureDescriptors}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.tx.signing.v1beta1.SignatureDescriptors)
        proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptorsOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptors_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptors_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors.class, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors.Builder.class);
      }

      // Construct using proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
          getSignaturesFieldBuilder();
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (signaturesBuilder_ == null) {
          signatures_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          signaturesBuilder_.clear();
        }
        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptors_descriptor;
      }

      @java.lang.Override
      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors getDefaultInstanceForType() {
        return proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors.getDefaultInstance();
      }

      @java.lang.Override
      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors build() {
        proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors buildPartial() {
        proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors result = new proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors(this);
        int from_bitField0_ = bitField0_;
        if (signaturesBuilder_ == null) {
          if (((bitField0_ & 0x00000001) == 0x00000001)) {
            signatures_ = java.util.Collections.unmodifiableList(signatures_);
            bitField0_ = (bitField0_ & ~0x00000001);
          }
          result.signatures_ = signatures_;
        } else {
          result.signatures_ = signaturesBuilder_.build();
        }
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors) {
          return mergeFrom((proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors other) {
        if (other == proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors.getDefaultInstance()) return this;
        if (signaturesBuilder_ == null) {
          if (!other.signatures_.isEmpty()) {
            if (signatures_.isEmpty()) {
              signatures_ = other.signatures_;
              bitField0_ = (bitField0_ & ~0x00000001);
            } else {
              ensureSignaturesIsMutable();
              signatures_.addAll(other.signatures_);
            }
            onChanged();
          }
        } else {
          if (!other.signatures_.isEmpty()) {
            if (signaturesBuilder_.isEmpty()) {
              signaturesBuilder_.dispose();
              signaturesBuilder_ = null;
              signatures_ = other.signatures_;
              bitField0_ = (bitField0_ & ~0x00000001);
              signaturesBuilder_ = 
                com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                   getSignaturesFieldBuilder() : null;
            } else {
              signaturesBuilder_.addAllMessages(other.signatures_);
            }
          }
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }
      private int bitField0_;

      private java.util.List<proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor> signatures_ =
        java.util.Collections.emptyList();
      private void ensureSignaturesIsMutable() {
        if (!((bitField0_ & 0x00000001) == 0x00000001)) {
          signatures_ = new java.util.ArrayList<proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor>(signatures_);
          bitField0_ |= 0x00000001;
         }
      }

      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Builder, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptorOrBuilder> signaturesBuilder_;

      /**
       * <pre>
       * signatures are the signature descriptors
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
       */
      public java.util.List<proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor> getSignaturesList() {
        if (signaturesBuilder_ == null) {
          return java.util.Collections.unmodifiableList(signatures_);
        } else {
          return signaturesBuilder_.getMessageList();
        }
      }
      /**
       * <pre>
       * signatures are the signature descriptors
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
       */
      public int getSignaturesCount() {
        if (signaturesBuilder_ == null) {
          return signatures_.size();
        } else {
          return signaturesBuilder_.getCount();
        }
      }
      /**
       * <pre>
       * signatures are the signature descriptors
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
       */
      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor getSignatures(int index) {
        if (signaturesBuilder_ == null) {
          return signatures_.get(index);
        } else {
          return signaturesBuilder_.getMessage(index);
        }
      }
      /**
       * <pre>
       * signatures are the signature descriptors
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
       */
      public Builder setSignatures(
          int index, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor value) {
        if (signaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignaturesIsMutable();
          signatures_.set(index, value);
          onChanged();
        } else {
          signaturesBuilder_.setMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * signatures are the signature descriptors
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
       */
      public Builder setSignatures(
          int index, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Builder builderForValue) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.set(index, builderForValue.build());
          onChanged();
        } else {
          signaturesBuilder_.setMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * signatures are the signature descriptors
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
       */
      public Builder addSignatures(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor value) {
        if (signaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignaturesIsMutable();
          signatures_.add(value);
          onChanged();
        } else {
          signaturesBuilder_.addMessage(value);
        }
        return this;
      }
      /**
       * <pre>
       * signatures are the signature descriptors
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
       */
      public Builder addSignatures(
          int index, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor value) {
        if (signaturesBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          ensureSignaturesIsMutable();
          signatures_.add(index, value);
          onChanged();
        } else {
          signaturesBuilder_.addMessage(index, value);
        }
        return this;
      }
      /**
       * <pre>
       * signatures are the signature descriptors
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
       */
      public Builder addSignatures(
          proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Builder builderForValue) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.add(builderForValue.build());
          onChanged();
        } else {
          signaturesBuilder_.addMessage(builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * signatures are the signature descriptors
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
       */
      public Builder addSignatures(
          int index, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Builder builderForValue) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.add(index, builderForValue.build());
          onChanged();
        } else {
          signaturesBuilder_.addMessage(index, builderForValue.build());
        }
        return this;
      }
      /**
       * <pre>
       * signatures are the signature descriptors
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
       */
      public Builder addAllSignatures(
          java.lang.Iterable<? extends proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor> values) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          com.google.protobuf.AbstractMessageLite.Builder.addAll(
              values, signatures_);
          onChanged();
        } else {
          signaturesBuilder_.addAllMessages(values);
        }
        return this;
      }
      /**
       * <pre>
       * signatures are the signature descriptors
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
       */
      public Builder clearSignatures() {
        if (signaturesBuilder_ == null) {
          signatures_ = java.util.Collections.emptyList();
          bitField0_ = (bitField0_ & ~0x00000001);
          onChanged();
        } else {
          signaturesBuilder_.clear();
        }
        return this;
      }
      /**
       * <pre>
       * signatures are the signature descriptors
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
       */
      public Builder removeSignatures(int index) {
        if (signaturesBuilder_ == null) {
          ensureSignaturesIsMutable();
          signatures_.remove(index);
          onChanged();
        } else {
          signaturesBuilder_.remove(index);
        }
        return this;
      }
      /**
       * <pre>
       * signatures are the signature descriptors
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
       */
      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Builder getSignaturesBuilder(
          int index) {
        return getSignaturesFieldBuilder().getBuilder(index);
      }
      /**
       * <pre>
       * signatures are the signature descriptors
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
       */
      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptorOrBuilder getSignaturesOrBuilder(
          int index) {
        if (signaturesBuilder_ == null) {
          return signatures_.get(index);  } else {
          return signaturesBuilder_.getMessageOrBuilder(index);
        }
      }
      /**
       * <pre>
       * signatures are the signature descriptors
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
       */
      public java.util.List<? extends proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptorOrBuilder> 
           getSignaturesOrBuilderList() {
        if (signaturesBuilder_ != null) {
          return signaturesBuilder_.getMessageOrBuilderList();
        } else {
          return java.util.Collections.unmodifiableList(signatures_);
        }
      }
      /**
       * <pre>
       * signatures are the signature descriptors
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
       */
      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Builder addSignaturesBuilder() {
        return getSignaturesFieldBuilder().addBuilder(
            proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.getDefaultInstance());
      }
      /**
       * <pre>
       * signatures are the signature descriptors
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
       */
      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Builder addSignaturesBuilder(
          int index) {
        return getSignaturesFieldBuilder().addBuilder(
            index, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.getDefaultInstance());
      }
      /**
       * <pre>
       * signatures are the signature descriptors
       * </pre>
       *
       * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor signatures = 1;</code>
       */
      public java.util.List<proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Builder> 
           getSignaturesBuilderList() {
        return getSignaturesFieldBuilder().getBuilderList();
      }
      private com.google.protobuf.RepeatedFieldBuilderV3<
          proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Builder, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptorOrBuilder> 
          getSignaturesFieldBuilder() {
        if (signaturesBuilder_ == null) {
          signaturesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
              proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Builder, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptorOrBuilder>(
                  signatures_,
                  ((bitField0_ & 0x00000001) == 0x00000001),
                  getParentForChildren(),
                  isClean());
          signatures_ = null;
        }
        return signaturesBuilder_;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.tx.signing.v1beta1.SignatureDescriptors)
    }

    // @@protoc_insertion_point(class_scope:cosmos.tx.signing.v1beta1.SignatureDescriptors)
    private static final proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors();
    }

    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignatureDescriptors>
        PARSER = new com.google.protobuf.AbstractParser<SignatureDescriptors>() {
      @java.lang.Override
      public SignatureDescriptors parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignatureDescriptors(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignatureDescriptors> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignatureDescriptors> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptors getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  public interface SignatureDescriptorOrBuilder extends
      // @@protoc_insertion_point(interface_extends:cosmos.tx.signing.v1beta1.SignatureDescriptor)
      com.google.protobuf.MessageOrBuilder {

    /**
     * <pre>
     * public_key is the public key of the signer
     * </pre>
     *
     * <code>.google.protobuf.Any public_key = 1;</code>
     */
    boolean hasPublicKey();
    /**
     * <pre>
     * public_key is the public key of the signer
     * </pre>
     *
     * <code>.google.protobuf.Any public_key = 1;</code>
     */
    com.google.protobuf.Any getPublicKey();
    /**
     * <pre>
     * public_key is the public key of the signer
     * </pre>
     *
     * <code>.google.protobuf.Any public_key = 1;</code>
     */
    com.google.protobuf.AnyOrBuilder getPublicKeyOrBuilder();

    /**
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
     */
    boolean hasData();
    /**
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
     */
    proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data getData();
    /**
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
     */
    proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.DataOrBuilder getDataOrBuilder();

    /**
     * <pre>
     * sequence is the sequence of the account, which describes the
     * number of committed transactions signed by a given address. It is used to prevent
     * replay attacks.
     * </pre>
     *
     * <code>uint64 sequence = 3;</code>
     */
    long getSequence();
  }
  /**
   * <pre>
   * SignatureDescriptor is a convenience type which represents the full data for
   * a signature including the public key of the signer, signing modes and the
   * signature itself. It is primarily used for coordinating signatures between
   * clients.
   * </pre>
   *
   * Protobuf type {@code cosmos.tx.signing.v1beta1.SignatureDescriptor}
   */
  public  static final class SignatureDescriptor extends
      com.google.protobuf.GeneratedMessageV3 implements
      // @@protoc_insertion_point(message_implements:cosmos.tx.signing.v1beta1.SignatureDescriptor)
      SignatureDescriptorOrBuilder {
  private static final long serialVersionUID = 0L;
    // Use SignatureDescriptor.newBuilder() to construct.
    private SignatureDescriptor(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
      super(builder);
    }
    private SignatureDescriptor() {
      sequence_ = 0L;
    }

    @java.lang.Override
    public final com.google.protobuf.UnknownFieldSet
    getUnknownFields() {
      return this.unknownFields;
    }
    private SignatureDescriptor(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      this();
      if (extensionRegistry == null) {
        throw new java.lang.NullPointerException();
      }
      int mutable_bitField0_ = 0;
      com.google.protobuf.UnknownFieldSet.Builder unknownFields =
          com.google.protobuf.UnknownFieldSet.newBuilder();
      try {
        boolean done = false;
        while (!done) {
          int tag = input.readTag();
          switch (tag) {
            case 0:
              done = true;
              break;
            case 10: {
              com.google.protobuf.Any.Builder subBuilder = null;
              if (publicKey_ != null) {
                subBuilder = publicKey_.toBuilder();
              }
              publicKey_ = input.readMessage(com.google.protobuf.Any.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(publicKey_);
                publicKey_ = subBuilder.buildPartial();
              }

              break;
            }
            case 18: {
              proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Builder subBuilder = null;
              if (data_ != null) {
                subBuilder = data_.toBuilder();
              }
              data_ = input.readMessage(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.parser(), extensionRegistry);
              if (subBuilder != null) {
                subBuilder.mergeFrom(data_);
                data_ = subBuilder.buildPartial();
              }

              break;
            }
            case 24: {

              sequence_ = input.readUInt64();
              break;
            }
            default: {
              if (!parseUnknownFieldProto3(
                  input, unknownFields, extensionRegistry, tag)) {
                done = true;
              }
              break;
            }
          }
        }
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        throw e.setUnfinishedMessage(this);
      } catch (java.io.IOException e) {
        throw new com.google.protobuf.InvalidProtocolBufferException(
            e).setUnfinishedMessage(this);
      } finally {
        this.unknownFields = unknownFields.build();
        makeExtensionsImmutable();
      }
    }
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_descriptor;
    }

    @java.lang.Override
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.class, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Builder.class);
    }

    public interface DataOrBuilder extends
        // @@protoc_insertion_point(interface_extends:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data)
        com.google.protobuf.MessageOrBuilder {

      /**
       * <pre>
       * single represents a single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
       */
      boolean hasSingle();
      /**
       * <pre>
       * single represents a single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
       */
      proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single getSingle();
      /**
       * <pre>
       * single represents a single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
       */
      proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.SingleOrBuilder getSingleOrBuilder();

      /**
       * <pre>
       * multi represents a multisig signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
       */
      boolean hasMulti();
      /**
       * <pre>
       * multi represents a multisig signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
       */
      proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi getMulti();
      /**
       * <pre>
       * multi represents a multisig signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
       */
      proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.MultiOrBuilder getMultiOrBuilder();

      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.SumCase getSumCase();
    }
    /**
     * <pre>
     * Data represents signature data
     * </pre>
     *
     * Protobuf type {@code cosmos.tx.signing.v1beta1.SignatureDescriptor.Data}
     */
    public  static final class Data extends
        com.google.protobuf.GeneratedMessageV3 implements
        // @@protoc_insertion_point(message_implements:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data)
        DataOrBuilder {
    private static final long serialVersionUID = 0L;
      // Use Data.newBuilder() to construct.
      private Data(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
        super(builder);
      }
      private Data() {
      }

      @java.lang.Override
      public final com.google.protobuf.UnknownFieldSet
      getUnknownFields() {
        return this.unknownFields;
      }
      private Data(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        this();
        if (extensionRegistry == null) {
          throw new java.lang.NullPointerException();
        }
        int mutable_bitField0_ = 0;
        com.google.protobuf.UnknownFieldSet.Builder unknownFields =
            com.google.protobuf.UnknownFieldSet.newBuilder();
        try {
          boolean done = false;
          while (!done) {
            int tag = input.readTag();
            switch (tag) {
              case 0:
                done = true;
                break;
              case 10: {
                proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.Builder subBuilder = null;
                if (sumCase_ == 1) {
                  subBuilder = ((proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single) sum_).toBuilder();
                }
                sum_ =
                    input.readMessage(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single) sum_);
                  sum_ = subBuilder.buildPartial();
                }
                sumCase_ = 1;
                break;
              }
              case 18: {
                proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.Builder subBuilder = null;
                if (sumCase_ == 2) {
                  subBuilder = ((proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi) sum_).toBuilder();
                }
                sum_ =
                    input.readMessage(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.parser(), extensionRegistry);
                if (subBuilder != null) {
                  subBuilder.mergeFrom((proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi) sum_);
                  sum_ = subBuilder.buildPartial();
                }
                sumCase_ = 2;
                break;
              }
              default: {
                if (!parseUnknownFieldProto3(
                    input, unknownFields, extensionRegistry, tag)) {
                  done = true;
                }
                break;
              }
            }
          }
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          throw e.setUnfinishedMessage(this);
        } catch (java.io.IOException e) {
          throw new com.google.protobuf.InvalidProtocolBufferException(
              e).setUnfinishedMessage(this);
        } finally {
          this.unknownFields = unknownFields.build();
          makeExtensionsImmutable();
        }
      }
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.class, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Builder.class);
      }

      public interface SingleOrBuilder extends
          // @@protoc_insertion_point(interface_extends:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * mode is the signing mode of the single signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
         */
        int getModeValue();
        /**
         * <pre>
         * mode is the signing mode of the single signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
         */
        proto.cosmos.tx.signing.v1beta1.Signing.SignMode getMode();

        /**
         * <pre>
         * signature is the raw signature bytes
         * </pre>
         *
         * <code>bytes signature = 2;</code>
         */
        com.google.protobuf.ByteString getSignature();
      }
      /**
       * <pre>
       * Single is the signature data for a single signer
       * </pre>
       *
       * Protobuf type {@code cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single}
       */
      public  static final class Single extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single)
          SingleOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Single.newBuilder() to construct.
        private Single(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Single() {
          mode_ = 0;
          signature_ = com.google.protobuf.ByteString.EMPTY;
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Single(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 8: {
                  int rawValue = input.readEnum();

                  mode_ = rawValue;
                  break;
                }
                case 18: {

                  signature_ = input.readBytes();
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Single_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Single_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.class, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.Builder.class);
        }

        public static final int MODE_FIELD_NUMBER = 1;
        private int mode_;
        /**
         * <pre>
         * mode is the signing mode of the single signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
         */
        public int getModeValue() {
          return mode_;
        }
        /**
         * <pre>
         * mode is the signing mode of the single signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
         */
        public proto.cosmos.tx.signing.v1beta1.Signing.SignMode getMode() {
          @SuppressWarnings("deprecation")
          proto.cosmos.tx.signing.v1beta1.Signing.SignMode result = proto.cosmos.tx.signing.v1beta1.Signing.SignMode.valueOf(mode_);
          return result == null ? proto.cosmos.tx.signing.v1beta1.Signing.SignMode.UNRECOGNIZED : result;
        }

        public static final int SIGNATURE_FIELD_NUMBER = 2;
        private com.google.protobuf.ByteString signature_;
        /**
         * <pre>
         * signature is the raw signature bytes
         * </pre>
         *
         * <code>bytes signature = 2;</code>
         */
        public com.google.protobuf.ByteString getSignature() {
          return signature_;
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (mode_ != proto.cosmos.tx.signing.v1beta1.Signing.SignMode.SIGN_MODE_UNSPECIFIED.getNumber()) {
            output.writeEnum(1, mode_);
          }
          if (!signature_.isEmpty()) {
            output.writeBytes(2, signature_);
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (mode_ != proto.cosmos.tx.signing.v1beta1.Signing.SignMode.SIGN_MODE_UNSPECIFIED.getNumber()) {
            size += com.google.protobuf.CodedOutputStream
              .computeEnumSize(1, mode_);
          }
          if (!signature_.isEmpty()) {
            size += com.google.protobuf.CodedOutputStream
              .computeBytesSize(2, signature_);
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single)) {
            return super.equals(obj);
          }
          proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single other = (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single) obj;

          boolean result = true;
          result = result && mode_ == other.mode_;
          result = result && getSignature()
              .equals(other.getSignature());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          hash = (37 * hash) + MODE_FIELD_NUMBER;
          hash = (53 * hash) + mode_;
          hash = (37 * hash) + SIGNATURE_FIELD_NUMBER;
          hash = (53 * hash) + getSignature().hashCode();
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Single is the signature data for a single signer
         * </pre>
         *
         * Protobuf type {@code cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single)
            proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.SingleOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Single_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Single_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.class, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.Builder.class);
          }

          // Construct using proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            mode_ = 0;

            signature_ = com.google.protobuf.ByteString.EMPTY;

            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Single_descriptor;
          }

          @java.lang.Override
          public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single getDefaultInstanceForType() {
            return proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.getDefaultInstance();
          }

          @java.lang.Override
          public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single build() {
            proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single buildPartial() {
            proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single result = new proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single(this);
            result.mode_ = mode_;
            result.signature_ = signature_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single) {
              return mergeFrom((proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single other) {
            if (other == proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.getDefaultInstance()) return this;
            if (other.mode_ != 0) {
              setModeValue(other.getModeValue());
            }
            if (other.getSignature() != com.google.protobuf.ByteString.EMPTY) {
              setSignature(other.getSignature());
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }

          private int mode_ = 0;
          /**
           * <pre>
           * mode is the signing mode of the single signer
           * </pre>
           *
           * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
           */
          public int getModeValue() {
            return mode_;
          }
          /**
           * <pre>
           * mode is the signing mode of the single signer
           * </pre>
           *
           * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
           */
          public Builder setModeValue(int value) {
            mode_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * mode is the signing mode of the single signer
           * </pre>
           *
           * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
           */
          public proto.cosmos.tx.signing.v1beta1.Signing.SignMode getMode() {
            @SuppressWarnings("deprecation")
            proto.cosmos.tx.signing.v1beta1.Signing.SignMode result = proto.cosmos.tx.signing.v1beta1.Signing.SignMode.valueOf(mode_);
            return result == null ? proto.cosmos.tx.signing.v1beta1.Signing.SignMode.UNRECOGNIZED : result;
          }
          /**
           * <pre>
           * mode is the signing mode of the single signer
           * </pre>
           *
           * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
           */
          public Builder setMode(proto.cosmos.tx.signing.v1beta1.Signing.SignMode value) {
            if (value == null) {
              throw new NullPointerException();
            }
            
            mode_ = value.getNumber();
            onChanged();
            return this;
          }
          /**
           * <pre>
           * mode is the signing mode of the single signer
           * </pre>
           *
           * <code>.cosmos.tx.signing.v1beta1.SignMode mode = 1;</code>
           */
          public Builder clearMode() {
            
            mode_ = 0;
            onChanged();
            return this;
          }

          private com.google.protobuf.ByteString signature_ = com.google.protobuf.ByteString.EMPTY;
          /**
           * <pre>
           * signature is the raw signature bytes
           * </pre>
           *
           * <code>bytes signature = 2;</code>
           */
          public com.google.protobuf.ByteString getSignature() {
            return signature_;
          }
          /**
           * <pre>
           * signature is the raw signature bytes
           * </pre>
           *
           * <code>bytes signature = 2;</code>
           */
          public Builder setSignature(com.google.protobuf.ByteString value) {
            if (value == null) {
    throw new NullPointerException();
  }
  
            signature_ = value;
            onChanged();
            return this;
          }
          /**
           * <pre>
           * signature is the raw signature bytes
           * </pre>
           *
           * <code>bytes signature = 2;</code>
           */
          public Builder clearSignature() {
            
            signature_ = getDefaultInstance().getSignature();
            onChanged();
            return this;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single)
        }

        // @@protoc_insertion_point(class_scope:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single)
        private static final proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single();
        }

        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Single>
            PARSER = new com.google.protobuf.AbstractParser<Single>() {
          @java.lang.Override
          public Single parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Single(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Single> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Single> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      public interface MultiOrBuilder extends
          // @@protoc_insertion_point(interface_extends:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi)
          com.google.protobuf.MessageOrBuilder {

        /**
         * <pre>
         * bitarray specifies which keys within the multisig are signing
         * </pre>
         *
         * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
         */
        boolean hasBitarray();
        /**
         * <pre>
         * bitarray specifies which keys within the multisig are signing
         * </pre>
         *
         * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
         */
        proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray getBitarray();
        /**
         * <pre>
         * bitarray specifies which keys within the multisig are signing
         * </pre>
         *
         * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
         */
        proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArrayOrBuilder getBitarrayOrBuilder();

        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        java.util.List<proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data> 
            getSignaturesList();
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data getSignatures(int index);
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        int getSignaturesCount();
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        java.util.List<? extends proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.DataOrBuilder> 
            getSignaturesOrBuilderList();
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.DataOrBuilder getSignaturesOrBuilder(
            int index);
      }
      /**
       * <pre>
       * Multi is the signature data for a multisig public key
       * </pre>
       *
       * Protobuf type {@code cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi}
       */
      public  static final class Multi extends
          com.google.protobuf.GeneratedMessageV3 implements
          // @@protoc_insertion_point(message_implements:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi)
          MultiOrBuilder {
      private static final long serialVersionUID = 0L;
        // Use Multi.newBuilder() to construct.
        private Multi(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
          super(builder);
        }
        private Multi() {
          signatures_ = java.util.Collections.emptyList();
        }

        @java.lang.Override
        public final com.google.protobuf.UnknownFieldSet
        getUnknownFields() {
          return this.unknownFields;
        }
        private Multi(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          this();
          if (extensionRegistry == null) {
            throw new java.lang.NullPointerException();
          }
          int mutable_bitField0_ = 0;
          com.google.protobuf.UnknownFieldSet.Builder unknownFields =
              com.google.protobuf.UnknownFieldSet.newBuilder();
          try {
            boolean done = false;
            while (!done) {
              int tag = input.readTag();
              switch (tag) {
                case 0:
                  done = true;
                  break;
                case 10: {
                  proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray.Builder subBuilder = null;
                  if (bitarray_ != null) {
                    subBuilder = bitarray_.toBuilder();
                  }
                  bitarray_ = input.readMessage(proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray.parser(), extensionRegistry);
                  if (subBuilder != null) {
                    subBuilder.mergeFrom(bitarray_);
                    bitarray_ = subBuilder.buildPartial();
                  }

                  break;
                }
                case 18: {
                  if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
                    signatures_ = new java.util.ArrayList<proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data>();
                    mutable_bitField0_ |= 0x00000002;
                  }
                  signatures_.add(
                      input.readMessage(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.parser(), extensionRegistry));
                  break;
                }
                default: {
                  if (!parseUnknownFieldProto3(
                      input, unknownFields, extensionRegistry, tag)) {
                    done = true;
                  }
                  break;
                }
              }
            }
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            throw e.setUnfinishedMessage(this);
          } catch (java.io.IOException e) {
            throw new com.google.protobuf.InvalidProtocolBufferException(
                e).setUnfinishedMessage(this);
          } finally {
            if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              signatures_ = java.util.Collections.unmodifiableList(signatures_);
            }
            this.unknownFields = unknownFields.build();
            makeExtensionsImmutable();
          }
        }
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Multi_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Multi_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.class, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.Builder.class);
        }

        private int bitField0_;
        public static final int BITARRAY_FIELD_NUMBER = 1;
        private proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray bitarray_;
        /**
         * <pre>
         * bitarray specifies which keys within the multisig are signing
         * </pre>
         *
         * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
         */
        public boolean hasBitarray() {
          return bitarray_ != null;
        }
        /**
         * <pre>
         * bitarray specifies which keys within the multisig are signing
         * </pre>
         *
         * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
         */
        public proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray getBitarray() {
          return bitarray_ == null ? proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray.getDefaultInstance() : bitarray_;
        }
        /**
         * <pre>
         * bitarray specifies which keys within the multisig are signing
         * </pre>
         *
         * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
         */
        public proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArrayOrBuilder getBitarrayOrBuilder() {
          return getBitarray();
        }

        public static final int SIGNATURES_FIELD_NUMBER = 2;
        private java.util.List<proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data> signatures_;
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public java.util.List<proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data> getSignaturesList() {
          return signatures_;
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public java.util.List<? extends proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.DataOrBuilder> 
            getSignaturesOrBuilderList() {
          return signatures_;
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public int getSignaturesCount() {
          return signatures_.size();
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data getSignatures(int index) {
          return signatures_.get(index);
        }
        /**
         * <pre>
         * signatures is the signatures of the multi-signature
         * </pre>
         *
         * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
         */
        public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.DataOrBuilder getSignaturesOrBuilder(
            int index) {
          return signatures_.get(index);
        }

        private byte memoizedIsInitialized = -1;
        @java.lang.Override
        public final boolean isInitialized() {
          byte isInitialized = memoizedIsInitialized;
          if (isInitialized == 1) return true;
          if (isInitialized == 0) return false;

          memoizedIsInitialized = 1;
          return true;
        }

        @java.lang.Override
        public void writeTo(com.google.protobuf.CodedOutputStream output)
                            throws java.io.IOException {
          if (bitarray_ != null) {
            output.writeMessage(1, getBitarray());
          }
          for (int i = 0; i < signatures_.size(); i++) {
            output.writeMessage(2, signatures_.get(i));
          }
          unknownFields.writeTo(output);
        }

        @java.lang.Override
        public int getSerializedSize() {
          int size = memoizedSize;
          if (size != -1) return size;

          size = 0;
          if (bitarray_ != null) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(1, getBitarray());
          }
          for (int i = 0; i < signatures_.size(); i++) {
            size += com.google.protobuf.CodedOutputStream
              .computeMessageSize(2, signatures_.get(i));
          }
          size += unknownFields.getSerializedSize();
          memoizedSize = size;
          return size;
        }

        @java.lang.Override
        public boolean equals(final java.lang.Object obj) {
          if (obj == this) {
           return true;
          }
          if (!(obj instanceof proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi)) {
            return super.equals(obj);
          }
          proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi other = (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi) obj;

          boolean result = true;
          result = result && (hasBitarray() == other.hasBitarray());
          if (hasBitarray()) {
            result = result && getBitarray()
                .equals(other.getBitarray());
          }
          result = result && getSignaturesList()
              .equals(other.getSignaturesList());
          result = result && unknownFields.equals(other.unknownFields);
          return result;
        }

        @java.lang.Override
        public int hashCode() {
          if (memoizedHashCode != 0) {
            return memoizedHashCode;
          }
          int hash = 41;
          hash = (19 * hash) + getDescriptor().hashCode();
          if (hasBitarray()) {
            hash = (37 * hash) + BITARRAY_FIELD_NUMBER;
            hash = (53 * hash) + getBitarray().hashCode();
          }
          if (getSignaturesCount() > 0) {
            hash = (37 * hash) + SIGNATURES_FIELD_NUMBER;
            hash = (53 * hash) + getSignaturesList().hashCode();
          }
          hash = (29 * hash) + unknownFields.hashCode();
          memoizedHashCode = hash;
          return hash;
        }

        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi parseFrom(
            java.nio.ByteBuffer data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi parseFrom(
            java.nio.ByteBuffer data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi parseFrom(
            com.google.protobuf.ByteString data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi parseFrom(
            com.google.protobuf.ByteString data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi parseFrom(byte[] data)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi parseFrom(
            byte[] data,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return PARSER.parseFrom(data, extensionRegistry);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi parseFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi parseFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi parseDelimitedFrom(java.io.InputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi parseDelimitedFrom(
            java.io.InputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi parseFrom(
            com.google.protobuf.CodedInputStream input)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input);
        }
        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi parseFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          return com.google.protobuf.GeneratedMessageV3
              .parseWithIOException(PARSER, input, extensionRegistry);
        }

        @java.lang.Override
        public Builder newBuilderForType() { return newBuilder(); }
        public static Builder newBuilder() {
          return DEFAULT_INSTANCE.toBuilder();
        }
        public static Builder newBuilder(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi prototype) {
          return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
        }
        @java.lang.Override
        public Builder toBuilder() {
          return this == DEFAULT_INSTANCE
              ? new Builder() : new Builder().mergeFrom(this);
        }

        @java.lang.Override
        protected Builder newBuilderForType(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          Builder builder = new Builder(parent);
          return builder;
        }
        /**
         * <pre>
         * Multi is the signature data for a multisig public key
         * </pre>
         *
         * Protobuf type {@code cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi}
         */
        public static final class Builder extends
            com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
            // @@protoc_insertion_point(builder_implements:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi)
            proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.MultiOrBuilder {
          public static final com.google.protobuf.Descriptors.Descriptor
              getDescriptor() {
            return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Multi_descriptor;
          }

          @java.lang.Override
          protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
              internalGetFieldAccessorTable() {
            return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Multi_fieldAccessorTable
                .ensureFieldAccessorsInitialized(
                    proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.class, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.Builder.class);
          }

          // Construct using proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.newBuilder()
          private Builder() {
            maybeForceBuilderInitialization();
          }

          private Builder(
              com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
            super(parent);
            maybeForceBuilderInitialization();
          }
          private void maybeForceBuilderInitialization() {
            if (com.google.protobuf.GeneratedMessageV3
                    .alwaysUseFieldBuilders) {
              getSignaturesFieldBuilder();
            }
          }
          @java.lang.Override
          public Builder clear() {
            super.clear();
            if (bitarrayBuilder_ == null) {
              bitarray_ = null;
            } else {
              bitarray_ = null;
              bitarrayBuilder_ = null;
            }
            if (signaturesBuilder_ == null) {
              signatures_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000002);
            } else {
              signaturesBuilder_.clear();
            }
            return this;
          }

          @java.lang.Override
          public com.google.protobuf.Descriptors.Descriptor
              getDescriptorForType() {
            return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Multi_descriptor;
          }

          @java.lang.Override
          public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi getDefaultInstanceForType() {
            return proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.getDefaultInstance();
          }

          @java.lang.Override
          public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi build() {
            proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi result = buildPartial();
            if (!result.isInitialized()) {
              throw newUninitializedMessageException(result);
            }
            return result;
          }

          @java.lang.Override
          public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi buildPartial() {
            proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi result = new proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi(this);
            int from_bitField0_ = bitField0_;
            int to_bitField0_ = 0;
            if (bitarrayBuilder_ == null) {
              result.bitarray_ = bitarray_;
            } else {
              result.bitarray_ = bitarrayBuilder_.build();
            }
            if (signaturesBuilder_ == null) {
              if (((bitField0_ & 0x00000002) == 0x00000002)) {
                signatures_ = java.util.Collections.unmodifiableList(signatures_);
                bitField0_ = (bitField0_ & ~0x00000002);
              }
              result.signatures_ = signatures_;
            } else {
              result.signatures_ = signaturesBuilder_.build();
            }
            result.bitField0_ = to_bitField0_;
            onBuilt();
            return result;
          }

          @java.lang.Override
          public Builder clone() {
            return (Builder) super.clone();
          }
          @java.lang.Override
          public Builder setField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.setField(field, value);
          }
          @java.lang.Override
          public Builder clearField(
              com.google.protobuf.Descriptors.FieldDescriptor field) {
            return (Builder) super.clearField(field);
          }
          @java.lang.Override
          public Builder clearOneof(
              com.google.protobuf.Descriptors.OneofDescriptor oneof) {
            return (Builder) super.clearOneof(oneof);
          }
          @java.lang.Override
          public Builder setRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              int index, java.lang.Object value) {
            return (Builder) super.setRepeatedField(field, index, value);
          }
          @java.lang.Override
          public Builder addRepeatedField(
              com.google.protobuf.Descriptors.FieldDescriptor field,
              java.lang.Object value) {
            return (Builder) super.addRepeatedField(field, value);
          }
          @java.lang.Override
          public Builder mergeFrom(com.google.protobuf.Message other) {
            if (other instanceof proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi) {
              return mergeFrom((proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi)other);
            } else {
              super.mergeFrom(other);
              return this;
            }
          }

          public Builder mergeFrom(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi other) {
            if (other == proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.getDefaultInstance()) return this;
            if (other.hasBitarray()) {
              mergeBitarray(other.getBitarray());
            }
            if (signaturesBuilder_ == null) {
              if (!other.signatures_.isEmpty()) {
                if (signatures_.isEmpty()) {
                  signatures_ = other.signatures_;
                  bitField0_ = (bitField0_ & ~0x00000002);
                } else {
                  ensureSignaturesIsMutable();
                  signatures_.addAll(other.signatures_);
                }
                onChanged();
              }
            } else {
              if (!other.signatures_.isEmpty()) {
                if (signaturesBuilder_.isEmpty()) {
                  signaturesBuilder_.dispose();
                  signaturesBuilder_ = null;
                  signatures_ = other.signatures_;
                  bitField0_ = (bitField0_ & ~0x00000002);
                  signaturesBuilder_ = 
                    com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                       getSignaturesFieldBuilder() : null;
                } else {
                  signaturesBuilder_.addAllMessages(other.signatures_);
                }
              }
            }
            this.mergeUnknownFields(other.unknownFields);
            onChanged();
            return this;
          }

          @java.lang.Override
          public final boolean isInitialized() {
            return true;
          }

          @java.lang.Override
          public Builder mergeFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws java.io.IOException {
            proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi parsedMessage = null;
            try {
              parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
            } catch (com.google.protobuf.InvalidProtocolBufferException e) {
              parsedMessage = (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi) e.getUnfinishedMessage();
              throw e.unwrapIOException();
            } finally {
              if (parsedMessage != null) {
                mergeFrom(parsedMessage);
              }
            }
            return this;
          }
          private int bitField0_;

          private proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray bitarray_ = null;
          private com.google.protobuf.SingleFieldBuilderV3<
              proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray, proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray.Builder, proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArrayOrBuilder> bitarrayBuilder_;
          /**
           * <pre>
           * bitarray specifies which keys within the multisig are signing
           * </pre>
           *
           * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
           */
          public boolean hasBitarray() {
            return bitarrayBuilder_ != null || bitarray_ != null;
          }
          /**
           * <pre>
           * bitarray specifies which keys within the multisig are signing
           * </pre>
           *
           * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
           */
          public proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray getBitarray() {
            if (bitarrayBuilder_ == null) {
              return bitarray_ == null ? proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray.getDefaultInstance() : bitarray_;
            } else {
              return bitarrayBuilder_.getMessage();
            }
          }
          /**
           * <pre>
           * bitarray specifies which keys within the multisig are signing
           * </pre>
           *
           * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
           */
          public Builder setBitarray(proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray value) {
            if (bitarrayBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              bitarray_ = value;
              onChanged();
            } else {
              bitarrayBuilder_.setMessage(value);
            }

            return this;
          }
          /**
           * <pre>
           * bitarray specifies which keys within the multisig are signing
           * </pre>
           *
           * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
           */
          public Builder setBitarray(
              proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray.Builder builderForValue) {
            if (bitarrayBuilder_ == null) {
              bitarray_ = builderForValue.build();
              onChanged();
            } else {
              bitarrayBuilder_.setMessage(builderForValue.build());
            }

            return this;
          }
          /**
           * <pre>
           * bitarray specifies which keys within the multisig are signing
           * </pre>
           *
           * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
           */
          public Builder mergeBitarray(proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray value) {
            if (bitarrayBuilder_ == null) {
              if (bitarray_ != null) {
                bitarray_ =
                  proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray.newBuilder(bitarray_).mergeFrom(value).buildPartial();
              } else {
                bitarray_ = value;
              }
              onChanged();
            } else {
              bitarrayBuilder_.mergeFrom(value);
            }

            return this;
          }
          /**
           * <pre>
           * bitarray specifies which keys within the multisig are signing
           * </pre>
           *
           * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
           */
          public Builder clearBitarray() {
            if (bitarrayBuilder_ == null) {
              bitarray_ = null;
              onChanged();
            } else {
              bitarray_ = null;
              bitarrayBuilder_ = null;
            }

            return this;
          }
          /**
           * <pre>
           * bitarray specifies which keys within the multisig are signing
           * </pre>
           *
           * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
           */
          public proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray.Builder getBitarrayBuilder() {
            
            onChanged();
            return getBitarrayFieldBuilder().getBuilder();
          }
          /**
           * <pre>
           * bitarray specifies which keys within the multisig are signing
           * </pre>
           *
           * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
           */
          public proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArrayOrBuilder getBitarrayOrBuilder() {
            if (bitarrayBuilder_ != null) {
              return bitarrayBuilder_.getMessageOrBuilder();
            } else {
              return bitarray_ == null ?
                  proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray.getDefaultInstance() : bitarray_;
            }
          }
          /**
           * <pre>
           * bitarray specifies which keys within the multisig are signing
           * </pre>
           *
           * <code>.cosmos.crypto.multisig.v1beta1.CompactBitArray bitarray = 1;</code>
           */
          private com.google.protobuf.SingleFieldBuilderV3<
              proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray, proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray.Builder, proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArrayOrBuilder> 
              getBitarrayFieldBuilder() {
            if (bitarrayBuilder_ == null) {
              bitarrayBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                  proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray, proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArray.Builder, proto.cosmos.crypto.multisig.v1beta1.Multisig.CompactBitArrayOrBuilder>(
                      getBitarray(),
                      getParentForChildren(),
                      isClean());
              bitarray_ = null;
            }
            return bitarrayBuilder_;
          }

          private java.util.List<proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data> signatures_ =
            java.util.Collections.emptyList();
          private void ensureSignaturesIsMutable() {
            if (!((bitField0_ & 0x00000002) == 0x00000002)) {
              signatures_ = new java.util.ArrayList<proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data>(signatures_);
              bitField0_ |= 0x00000002;
             }
          }

          private com.google.protobuf.RepeatedFieldBuilderV3<
              proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Builder, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.DataOrBuilder> signaturesBuilder_;

          /**
           * <pre>
           * signatures is the signatures of the multi-signature
           * </pre>
           *
           * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
           */
          public java.util.List<proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data> getSignaturesList() {
            if (signaturesBuilder_ == null) {
              return java.util.Collections.unmodifiableList(signatures_);
            } else {
              return signaturesBuilder_.getMessageList();
            }
          }
          /**
           * <pre>
           * signatures is the signatures of the multi-signature
           * </pre>
           *
           * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
           */
          public int getSignaturesCount() {
            if (signaturesBuilder_ == null) {
              return signatures_.size();
            } else {
              return signaturesBuilder_.getCount();
            }
          }
          /**
           * <pre>
           * signatures is the signatures of the multi-signature
           * </pre>
           *
           * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
           */
          public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data getSignatures(int index) {
            if (signaturesBuilder_ == null) {
              return signatures_.get(index);
            } else {
              return signaturesBuilder_.getMessage(index);
            }
          }
          /**
           * <pre>
           * signatures is the signatures of the multi-signature
           * </pre>
           *
           * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
           */
          public Builder setSignatures(
              int index, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data value) {
            if (signaturesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureSignaturesIsMutable();
              signatures_.set(index, value);
              onChanged();
            } else {
              signaturesBuilder_.setMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * signatures is the signatures of the multi-signature
           * </pre>
           *
           * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
           */
          public Builder setSignatures(
              int index, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Builder builderForValue) {
            if (signaturesBuilder_ == null) {
              ensureSignaturesIsMutable();
              signatures_.set(index, builderForValue.build());
              onChanged();
            } else {
              signaturesBuilder_.setMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * signatures is the signatures of the multi-signature
           * </pre>
           *
           * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
           */
          public Builder addSignatures(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data value) {
            if (signaturesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureSignaturesIsMutable();
              signatures_.add(value);
              onChanged();
            } else {
              signaturesBuilder_.addMessage(value);
            }
            return this;
          }
          /**
           * <pre>
           * signatures is the signatures of the multi-signature
           * </pre>
           *
           * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
           */
          public Builder addSignatures(
              int index, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data value) {
            if (signaturesBuilder_ == null) {
              if (value == null) {
                throw new NullPointerException();
              }
              ensureSignaturesIsMutable();
              signatures_.add(index, value);
              onChanged();
            } else {
              signaturesBuilder_.addMessage(index, value);
            }
            return this;
          }
          /**
           * <pre>
           * signatures is the signatures of the multi-signature
           * </pre>
           *
           * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
           */
          public Builder addSignatures(
              proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Builder builderForValue) {
            if (signaturesBuilder_ == null) {
              ensureSignaturesIsMutable();
              signatures_.add(builderForValue.build());
              onChanged();
            } else {
              signaturesBuilder_.addMessage(builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * signatures is the signatures of the multi-signature
           * </pre>
           *
           * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
           */
          public Builder addSignatures(
              int index, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Builder builderForValue) {
            if (signaturesBuilder_ == null) {
              ensureSignaturesIsMutable();
              signatures_.add(index, builderForValue.build());
              onChanged();
            } else {
              signaturesBuilder_.addMessage(index, builderForValue.build());
            }
            return this;
          }
          /**
           * <pre>
           * signatures is the signatures of the multi-signature
           * </pre>
           *
           * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
           */
          public Builder addAllSignatures(
              java.lang.Iterable<? extends proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data> values) {
            if (signaturesBuilder_ == null) {
              ensureSignaturesIsMutable();
              com.google.protobuf.AbstractMessageLite.Builder.addAll(
                  values, signatures_);
              onChanged();
            } else {
              signaturesBuilder_.addAllMessages(values);
            }
            return this;
          }
          /**
           * <pre>
           * signatures is the signatures of the multi-signature
           * </pre>
           *
           * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
           */
          public Builder clearSignatures() {
            if (signaturesBuilder_ == null) {
              signatures_ = java.util.Collections.emptyList();
              bitField0_ = (bitField0_ & ~0x00000002);
              onChanged();
            } else {
              signaturesBuilder_.clear();
            }
            return this;
          }
          /**
           * <pre>
           * signatures is the signatures of the multi-signature
           * </pre>
           *
           * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
           */
          public Builder removeSignatures(int index) {
            if (signaturesBuilder_ == null) {
              ensureSignaturesIsMutable();
              signatures_.remove(index);
              onChanged();
            } else {
              signaturesBuilder_.remove(index);
            }
            return this;
          }
          /**
           * <pre>
           * signatures is the signatures of the multi-signature
           * </pre>
           *
           * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
           */
          public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Builder getSignaturesBuilder(
              int index) {
            return getSignaturesFieldBuilder().getBuilder(index);
          }
          /**
           * <pre>
           * signatures is the signatures of the multi-signature
           * </pre>
           *
           * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
           */
          public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.DataOrBuilder getSignaturesOrBuilder(
              int index) {
            if (signaturesBuilder_ == null) {
              return signatures_.get(index);  } else {
              return signaturesBuilder_.getMessageOrBuilder(index);
            }
          }
          /**
           * <pre>
           * signatures is the signatures of the multi-signature
           * </pre>
           *
           * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
           */
          public java.util.List<? extends proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.DataOrBuilder> 
               getSignaturesOrBuilderList() {
            if (signaturesBuilder_ != null) {
              return signaturesBuilder_.getMessageOrBuilderList();
            } else {
              return java.util.Collections.unmodifiableList(signatures_);
            }
          }
          /**
           * <pre>
           * signatures is the signatures of the multi-signature
           * </pre>
           *
           * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
           */
          public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Builder addSignaturesBuilder() {
            return getSignaturesFieldBuilder().addBuilder(
                proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.getDefaultInstance());
          }
          /**
           * <pre>
           * signatures is the signatures of the multi-signature
           * </pre>
           *
           * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
           */
          public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Builder addSignaturesBuilder(
              int index) {
            return getSignaturesFieldBuilder().addBuilder(
                index, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.getDefaultInstance());
          }
          /**
           * <pre>
           * signatures is the signatures of the multi-signature
           * </pre>
           *
           * <code>repeated .cosmos.tx.signing.v1beta1.SignatureDescriptor.Data signatures = 2;</code>
           */
          public java.util.List<proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Builder> 
               getSignaturesBuilderList() {
            return getSignaturesFieldBuilder().getBuilderList();
          }
          private com.google.protobuf.RepeatedFieldBuilderV3<
              proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Builder, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.DataOrBuilder> 
              getSignaturesFieldBuilder() {
            if (signaturesBuilder_ == null) {
              signaturesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
                  proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Builder, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.DataOrBuilder>(
                      signatures_,
                      ((bitField0_ & 0x00000002) == 0x00000002),
                      getParentForChildren(),
                      isClean());
              signatures_ = null;
            }
            return signaturesBuilder_;
          }
          @java.lang.Override
          public final Builder setUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.setUnknownFieldsProto3(unknownFields);
          }

          @java.lang.Override
          public final Builder mergeUnknownFields(
              final com.google.protobuf.UnknownFieldSet unknownFields) {
            return super.mergeUnknownFields(unknownFields);
          }


          // @@protoc_insertion_point(builder_scope:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi)
        }

        // @@protoc_insertion_point(class_scope:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi)
        private static final proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi DEFAULT_INSTANCE;
        static {
          DEFAULT_INSTANCE = new proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi();
        }

        public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi getDefaultInstance() {
          return DEFAULT_INSTANCE;
        }

        private static final com.google.protobuf.Parser<Multi>
            PARSER = new com.google.protobuf.AbstractParser<Multi>() {
          @java.lang.Override
          public Multi parsePartialFrom(
              com.google.protobuf.CodedInputStream input,
              com.google.protobuf.ExtensionRegistryLite extensionRegistry)
              throws com.google.protobuf.InvalidProtocolBufferException {
            return new Multi(input, extensionRegistry);
          }
        };

        public static com.google.protobuf.Parser<Multi> parser() {
          return PARSER;
        }

        @java.lang.Override
        public com.google.protobuf.Parser<Multi> getParserForType() {
          return PARSER;
        }

        @java.lang.Override
        public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi getDefaultInstanceForType() {
          return DEFAULT_INSTANCE;
        }

      }

      private int sumCase_ = 0;
      private java.lang.Object sum_;
      public enum SumCase
          implements com.google.protobuf.Internal.EnumLite {
        SINGLE(1),
        MULTI(2),
        SUM_NOT_SET(0);
        private final int value;
        private SumCase(int value) {
          this.value = value;
        }
        /**
         * @deprecated Use {@link #forNumber(int)} instead.
         */
        @java.lang.Deprecated
        public static SumCase valueOf(int value) {
          return forNumber(value);
        }

        public static SumCase forNumber(int value) {
          switch (value) {
            case 1: return SINGLE;
            case 2: return MULTI;
            case 0: return SUM_NOT_SET;
            default: return null;
          }
        }
        public int getNumber() {
          return this.value;
        }
      };

      public SumCase
      getSumCase() {
        return SumCase.forNumber(
            sumCase_);
      }

      public static final int SINGLE_FIELD_NUMBER = 1;
      /**
       * <pre>
       * single represents a single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
       */
      public boolean hasSingle() {
        return sumCase_ == 1;
      }
      /**
       * <pre>
       * single represents a single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
       */
      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single getSingle() {
        if (sumCase_ == 1) {
           return (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single) sum_;
        }
        return proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.getDefaultInstance();
      }
      /**
       * <pre>
       * single represents a single signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
       */
      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.SingleOrBuilder getSingleOrBuilder() {
        if (sumCase_ == 1) {
           return (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single) sum_;
        }
        return proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.getDefaultInstance();
      }

      public static final int MULTI_FIELD_NUMBER = 2;
      /**
       * <pre>
       * multi represents a multisig signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
       */
      public boolean hasMulti() {
        return sumCase_ == 2;
      }
      /**
       * <pre>
       * multi represents a multisig signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
       */
      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi getMulti() {
        if (sumCase_ == 2) {
           return (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi) sum_;
        }
        return proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.getDefaultInstance();
      }
      /**
       * <pre>
       * multi represents a multisig signer
       * </pre>
       *
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
       */
      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.MultiOrBuilder getMultiOrBuilder() {
        if (sumCase_ == 2) {
           return (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi) sum_;
        }
        return proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.getDefaultInstance();
      }

      private byte memoizedIsInitialized = -1;
      @java.lang.Override
      public final boolean isInitialized() {
        byte isInitialized = memoizedIsInitialized;
        if (isInitialized == 1) return true;
        if (isInitialized == 0) return false;

        memoizedIsInitialized = 1;
        return true;
      }

      @java.lang.Override
      public void writeTo(com.google.protobuf.CodedOutputStream output)
                          throws java.io.IOException {
        if (sumCase_ == 1) {
          output.writeMessage(1, (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single) sum_);
        }
        if (sumCase_ == 2) {
          output.writeMessage(2, (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi) sum_);
        }
        unknownFields.writeTo(output);
      }

      @java.lang.Override
      public int getSerializedSize() {
        int size = memoizedSize;
        if (size != -1) return size;

        size = 0;
        if (sumCase_ == 1) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(1, (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single) sum_);
        }
        if (sumCase_ == 2) {
          size += com.google.protobuf.CodedOutputStream
            .computeMessageSize(2, (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi) sum_);
        }
        size += unknownFields.getSerializedSize();
        memoizedSize = size;
        return size;
      }

      @java.lang.Override
      public boolean equals(final java.lang.Object obj) {
        if (obj == this) {
         return true;
        }
        if (!(obj instanceof proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data)) {
          return super.equals(obj);
        }
        proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data other = (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data) obj;

        boolean result = true;
        result = result && getSumCase().equals(
            other.getSumCase());
        if (!result) return false;
        switch (sumCase_) {
          case 1:
            result = result && getSingle()
                .equals(other.getSingle());
            break;
          case 2:
            result = result && getMulti()
                .equals(other.getMulti());
            break;
          case 0:
          default:
        }
        result = result && unknownFields.equals(other.unknownFields);
        return result;
      }

      @java.lang.Override
      public int hashCode() {
        if (memoizedHashCode != 0) {
          return memoizedHashCode;
        }
        int hash = 41;
        hash = (19 * hash) + getDescriptor().hashCode();
        switch (sumCase_) {
          case 1:
            hash = (37 * hash) + SINGLE_FIELD_NUMBER;
            hash = (53 * hash) + getSingle().hashCode();
            break;
          case 2:
            hash = (37 * hash) + MULTI_FIELD_NUMBER;
            hash = (53 * hash) + getMulti().hashCode();
            break;
          case 0:
          default:
        }
        hash = (29 * hash) + unknownFields.hashCode();
        memoizedHashCode = hash;
        return hash;
      }

      public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data parseFrom(
          java.nio.ByteBuffer data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data parseFrom(
          java.nio.ByteBuffer data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data parseFrom(
          com.google.protobuf.ByteString data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data parseFrom(
          com.google.protobuf.ByteString data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data parseFrom(byte[] data)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data);
      }
      public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data parseFrom(
          byte[] data,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return PARSER.parseFrom(data, extensionRegistry);
      }
      public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data parseFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data parseFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }
      public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data parseDelimitedFrom(java.io.InputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input);
      }
      public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data parseDelimitedFrom(
          java.io.InputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
      }
      public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data parseFrom(
          com.google.protobuf.CodedInputStream input)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input);
      }
      public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data parseFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        return com.google.protobuf.GeneratedMessageV3
            .parseWithIOException(PARSER, input, extensionRegistry);
      }

      @java.lang.Override
      public Builder newBuilderForType() { return newBuilder(); }
      public static Builder newBuilder() {
        return DEFAULT_INSTANCE.toBuilder();
      }
      public static Builder newBuilder(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data prototype) {
        return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
      }
      @java.lang.Override
      public Builder toBuilder() {
        return this == DEFAULT_INSTANCE
            ? new Builder() : new Builder().mergeFrom(this);
      }

      @java.lang.Override
      protected Builder newBuilderForType(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        Builder builder = new Builder(parent);
        return builder;
      }
      /**
       * <pre>
       * Data represents signature data
       * </pre>
       *
       * Protobuf type {@code cosmos.tx.signing.v1beta1.SignatureDescriptor.Data}
       */
      public static final class Builder extends
          com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
          // @@protoc_insertion_point(builder_implements:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data)
          proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.DataOrBuilder {
        public static final com.google.protobuf.Descriptors.Descriptor
            getDescriptor() {
          return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_descriptor;
        }

        @java.lang.Override
        protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
            internalGetFieldAccessorTable() {
          return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_fieldAccessorTable
              .ensureFieldAccessorsInitialized(
                  proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.class, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Builder.class);
        }

        // Construct using proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.newBuilder()
        private Builder() {
          maybeForceBuilderInitialization();
        }

        private Builder(
            com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
          super(parent);
          maybeForceBuilderInitialization();
        }
        private void maybeForceBuilderInitialization() {
          if (com.google.protobuf.GeneratedMessageV3
                  .alwaysUseFieldBuilders) {
          }
        }
        @java.lang.Override
        public Builder clear() {
          super.clear();
          sumCase_ = 0;
          sum_ = null;
          return this;
        }

        @java.lang.Override
        public com.google.protobuf.Descriptors.Descriptor
            getDescriptorForType() {
          return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_descriptor;
        }

        @java.lang.Override
        public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data getDefaultInstanceForType() {
          return proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.getDefaultInstance();
        }

        @java.lang.Override
        public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data build() {
          proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data result = buildPartial();
          if (!result.isInitialized()) {
            throw newUninitializedMessageException(result);
          }
          return result;
        }

        @java.lang.Override
        public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data buildPartial() {
          proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data result = new proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data(this);
          if (sumCase_ == 1) {
            if (singleBuilder_ == null) {
              result.sum_ = sum_;
            } else {
              result.sum_ = singleBuilder_.build();
            }
          }
          if (sumCase_ == 2) {
            if (multiBuilder_ == null) {
              result.sum_ = sum_;
            } else {
              result.sum_ = multiBuilder_.build();
            }
          }
          result.sumCase_ = sumCase_;
          onBuilt();
          return result;
        }

        @java.lang.Override
        public Builder clone() {
          return (Builder) super.clone();
        }
        @java.lang.Override
        public Builder setField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.setField(field, value);
        }
        @java.lang.Override
        public Builder clearField(
            com.google.protobuf.Descriptors.FieldDescriptor field) {
          return (Builder) super.clearField(field);
        }
        @java.lang.Override
        public Builder clearOneof(
            com.google.protobuf.Descriptors.OneofDescriptor oneof) {
          return (Builder) super.clearOneof(oneof);
        }
        @java.lang.Override
        public Builder setRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            int index, java.lang.Object value) {
          return (Builder) super.setRepeatedField(field, index, value);
        }
        @java.lang.Override
        public Builder addRepeatedField(
            com.google.protobuf.Descriptors.FieldDescriptor field,
            java.lang.Object value) {
          return (Builder) super.addRepeatedField(field, value);
        }
        @java.lang.Override
        public Builder mergeFrom(com.google.protobuf.Message other) {
          if (other instanceof proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data) {
            return mergeFrom((proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data)other);
          } else {
            super.mergeFrom(other);
            return this;
          }
        }

        public Builder mergeFrom(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data other) {
          if (other == proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.getDefaultInstance()) return this;
          switch (other.getSumCase()) {
            case SINGLE: {
              mergeSingle(other.getSingle());
              break;
            }
            case MULTI: {
              mergeMulti(other.getMulti());
              break;
            }
            case SUM_NOT_SET: {
              break;
            }
          }
          this.mergeUnknownFields(other.unknownFields);
          onChanged();
          return this;
        }

        @java.lang.Override
        public final boolean isInitialized() {
          return true;
        }

        @java.lang.Override
        public Builder mergeFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws java.io.IOException {
          proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data parsedMessage = null;
          try {
            parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
          } catch (com.google.protobuf.InvalidProtocolBufferException e) {
            parsedMessage = (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data) e.getUnfinishedMessage();
            throw e.unwrapIOException();
          } finally {
            if (parsedMessage != null) {
              mergeFrom(parsedMessage);
            }
          }
          return this;
        }
        private int sumCase_ = 0;
        private java.lang.Object sum_;
        public SumCase
            getSumCase() {
          return SumCase.forNumber(
              sumCase_);
        }

        public Builder clearSum() {
          sumCase_ = 0;
          sum_ = null;
          onChanged();
          return this;
        }


        private com.google.protobuf.SingleFieldBuilderV3<
            proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.Builder, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.SingleOrBuilder> singleBuilder_;
        /**
         * <pre>
         * single represents a single signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
         */
        public boolean hasSingle() {
          return sumCase_ == 1;
        }
        /**
         * <pre>
         * single represents a single signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
         */
        public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single getSingle() {
          if (singleBuilder_ == null) {
            if (sumCase_ == 1) {
              return (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single) sum_;
            }
            return proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.getDefaultInstance();
          } else {
            if (sumCase_ == 1) {
              return singleBuilder_.getMessage();
            }
            return proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * single represents a single signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
         */
        public Builder setSingle(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single value) {
          if (singleBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sum_ = value;
            onChanged();
          } else {
            singleBuilder_.setMessage(value);
          }
          sumCase_ = 1;
          return this;
        }
        /**
         * <pre>
         * single represents a single signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
         */
        public Builder setSingle(
            proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.Builder builderForValue) {
          if (singleBuilder_ == null) {
            sum_ = builderForValue.build();
            onChanged();
          } else {
            singleBuilder_.setMessage(builderForValue.build());
          }
          sumCase_ = 1;
          return this;
        }
        /**
         * <pre>
         * single represents a single signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
         */
        public Builder mergeSingle(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single value) {
          if (singleBuilder_ == null) {
            if (sumCase_ == 1 &&
                sum_ != proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.getDefaultInstance()) {
              sum_ = proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.newBuilder((proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single) sum_)
                  .mergeFrom(value).buildPartial();
            } else {
              sum_ = value;
            }
            onChanged();
          } else {
            if (sumCase_ == 1) {
              singleBuilder_.mergeFrom(value);
            }
            singleBuilder_.setMessage(value);
          }
          sumCase_ = 1;
          return this;
        }
        /**
         * <pre>
         * single represents a single signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
         */
        public Builder clearSingle() {
          if (singleBuilder_ == null) {
            if (sumCase_ == 1) {
              sumCase_ = 0;
              sum_ = null;
              onChanged();
            }
          } else {
            if (sumCase_ == 1) {
              sumCase_ = 0;
              sum_ = null;
            }
            singleBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * single represents a single signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
         */
        public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.Builder getSingleBuilder() {
          return getSingleFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * single represents a single signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
         */
        public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.SingleOrBuilder getSingleOrBuilder() {
          if ((sumCase_ == 1) && (singleBuilder_ != null)) {
            return singleBuilder_.getMessageOrBuilder();
          } else {
            if (sumCase_ == 1) {
              return (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single) sum_;
            }
            return proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * single represents a single signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Single single = 1;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.Builder, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.SingleOrBuilder> 
            getSingleFieldBuilder() {
          if (singleBuilder_ == null) {
            if (!(sumCase_ == 1)) {
              sum_ = proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.getDefaultInstance();
            }
            singleBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single.Builder, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.SingleOrBuilder>(
                    (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Single) sum_,
                    getParentForChildren(),
                    isClean());
            sum_ = null;
          }
          sumCase_ = 1;
          onChanged();;
          return singleBuilder_;
        }

        private com.google.protobuf.SingleFieldBuilderV3<
            proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.Builder, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.MultiOrBuilder> multiBuilder_;
        /**
         * <pre>
         * multi represents a multisig signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
         */
        public boolean hasMulti() {
          return sumCase_ == 2;
        }
        /**
         * <pre>
         * multi represents a multisig signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
         */
        public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi getMulti() {
          if (multiBuilder_ == null) {
            if (sumCase_ == 2) {
              return (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi) sum_;
            }
            return proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.getDefaultInstance();
          } else {
            if (sumCase_ == 2) {
              return multiBuilder_.getMessage();
            }
            return proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * multi represents a multisig signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
         */
        public Builder setMulti(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi value) {
          if (multiBuilder_ == null) {
            if (value == null) {
              throw new NullPointerException();
            }
            sum_ = value;
            onChanged();
          } else {
            multiBuilder_.setMessage(value);
          }
          sumCase_ = 2;
          return this;
        }
        /**
         * <pre>
         * multi represents a multisig signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
         */
        public Builder setMulti(
            proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.Builder builderForValue) {
          if (multiBuilder_ == null) {
            sum_ = builderForValue.build();
            onChanged();
          } else {
            multiBuilder_.setMessage(builderForValue.build());
          }
          sumCase_ = 2;
          return this;
        }
        /**
         * <pre>
         * multi represents a multisig signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
         */
        public Builder mergeMulti(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi value) {
          if (multiBuilder_ == null) {
            if (sumCase_ == 2 &&
                sum_ != proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.getDefaultInstance()) {
              sum_ = proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.newBuilder((proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi) sum_)
                  .mergeFrom(value).buildPartial();
            } else {
              sum_ = value;
            }
            onChanged();
          } else {
            if (sumCase_ == 2) {
              multiBuilder_.mergeFrom(value);
            }
            multiBuilder_.setMessage(value);
          }
          sumCase_ = 2;
          return this;
        }
        /**
         * <pre>
         * multi represents a multisig signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
         */
        public Builder clearMulti() {
          if (multiBuilder_ == null) {
            if (sumCase_ == 2) {
              sumCase_ = 0;
              sum_ = null;
              onChanged();
            }
          } else {
            if (sumCase_ == 2) {
              sumCase_ = 0;
              sum_ = null;
            }
            multiBuilder_.clear();
          }
          return this;
        }
        /**
         * <pre>
         * multi represents a multisig signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
         */
        public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.Builder getMultiBuilder() {
          return getMultiFieldBuilder().getBuilder();
        }
        /**
         * <pre>
         * multi represents a multisig signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
         */
        public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.MultiOrBuilder getMultiOrBuilder() {
          if ((sumCase_ == 2) && (multiBuilder_ != null)) {
            return multiBuilder_.getMessageOrBuilder();
          } else {
            if (sumCase_ == 2) {
              return (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi) sum_;
            }
            return proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.getDefaultInstance();
          }
        }
        /**
         * <pre>
         * multi represents a multisig signer
         * </pre>
         *
         * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data.Multi multi = 2;</code>
         */
        private com.google.protobuf.SingleFieldBuilderV3<
            proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.Builder, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.MultiOrBuilder> 
            getMultiFieldBuilder() {
          if (multiBuilder_ == null) {
            if (!(sumCase_ == 2)) {
              sum_ = proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.getDefaultInstance();
            }
            multiBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
                proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi.Builder, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.MultiOrBuilder>(
                    (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Multi) sum_,
                    getParentForChildren(),
                    isClean());
            sum_ = null;
          }
          sumCase_ = 2;
          onChanged();;
          return multiBuilder_;
        }
        @java.lang.Override
        public final Builder setUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.setUnknownFieldsProto3(unknownFields);
        }

        @java.lang.Override
        public final Builder mergeUnknownFields(
            final com.google.protobuf.UnknownFieldSet unknownFields) {
          return super.mergeUnknownFields(unknownFields);
        }


        // @@protoc_insertion_point(builder_scope:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data)
      }

      // @@protoc_insertion_point(class_scope:cosmos.tx.signing.v1beta1.SignatureDescriptor.Data)
      private static final proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data DEFAULT_INSTANCE;
      static {
        DEFAULT_INSTANCE = new proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data();
      }

      public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data getDefaultInstance() {
        return DEFAULT_INSTANCE;
      }

      private static final com.google.protobuf.Parser<Data>
          PARSER = new com.google.protobuf.AbstractParser<Data>() {
        @java.lang.Override
        public Data parsePartialFrom(
            com.google.protobuf.CodedInputStream input,
            com.google.protobuf.ExtensionRegistryLite extensionRegistry)
            throws com.google.protobuf.InvalidProtocolBufferException {
          return new Data(input, extensionRegistry);
        }
      };

      public static com.google.protobuf.Parser<Data> parser() {
        return PARSER;
      }

      @java.lang.Override
      public com.google.protobuf.Parser<Data> getParserForType() {
        return PARSER;
      }

      @java.lang.Override
      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data getDefaultInstanceForType() {
        return DEFAULT_INSTANCE;
      }

    }

    public static final int PUBLIC_KEY_FIELD_NUMBER = 1;
    private com.google.protobuf.Any publicKey_;
    /**
     * <pre>
     * public_key is the public key of the signer
     * </pre>
     *
     * <code>.google.protobuf.Any public_key = 1;</code>
     */
    public boolean hasPublicKey() {
      return publicKey_ != null;
    }
    /**
     * <pre>
     * public_key is the public key of the signer
     * </pre>
     *
     * <code>.google.protobuf.Any public_key = 1;</code>
     */
    public com.google.protobuf.Any getPublicKey() {
      return publicKey_ == null ? com.google.protobuf.Any.getDefaultInstance() : publicKey_;
    }
    /**
     * <pre>
     * public_key is the public key of the signer
     * </pre>
     *
     * <code>.google.protobuf.Any public_key = 1;</code>
     */
    public com.google.protobuf.AnyOrBuilder getPublicKeyOrBuilder() {
      return getPublicKey();
    }

    public static final int DATA_FIELD_NUMBER = 2;
    private proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data data_;
    /**
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
     */
    public boolean hasData() {
      return data_ != null;
    }
    /**
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
     */
    public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data getData() {
      return data_ == null ? proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.getDefaultInstance() : data_;
    }
    /**
     * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
     */
    public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.DataOrBuilder getDataOrBuilder() {
      return getData();
    }

    public static final int SEQUENCE_FIELD_NUMBER = 3;
    private long sequence_;
    /**
     * <pre>
     * sequence is the sequence of the account, which describes the
     * number of committed transactions signed by a given address. It is used to prevent
     * replay attacks.
     * </pre>
     *
     * <code>uint64 sequence = 3;</code>
     */
    public long getSequence() {
      return sequence_;
    }

    private byte memoizedIsInitialized = -1;
    @java.lang.Override
    public final boolean isInitialized() {
      byte isInitialized = memoizedIsInitialized;
      if (isInitialized == 1) return true;
      if (isInitialized == 0) return false;

      memoizedIsInitialized = 1;
      return true;
    }

    @java.lang.Override
    public void writeTo(com.google.protobuf.CodedOutputStream output)
                        throws java.io.IOException {
      if (publicKey_ != null) {
        output.writeMessage(1, getPublicKey());
      }
      if (data_ != null) {
        output.writeMessage(2, getData());
      }
      if (sequence_ != 0L) {
        output.writeUInt64(3, sequence_);
      }
      unknownFields.writeTo(output);
    }

    @java.lang.Override
    public int getSerializedSize() {
      int size = memoizedSize;
      if (size != -1) return size;

      size = 0;
      if (publicKey_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, getPublicKey());
      }
      if (data_ != null) {
        size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, getData());
      }
      if (sequence_ != 0L) {
        size += com.google.protobuf.CodedOutputStream
          .computeUInt64Size(3, sequence_);
      }
      size += unknownFields.getSerializedSize();
      memoizedSize = size;
      return size;
    }

    @java.lang.Override
    public boolean equals(final java.lang.Object obj) {
      if (obj == this) {
       return true;
      }
      if (!(obj instanceof proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor)) {
        return super.equals(obj);
      }
      proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor other = (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor) obj;

      boolean result = true;
      result = result && (hasPublicKey() == other.hasPublicKey());
      if (hasPublicKey()) {
        result = result && getPublicKey()
            .equals(other.getPublicKey());
      }
      result = result && (hasData() == other.hasData());
      if (hasData()) {
        result = result && getData()
            .equals(other.getData());
      }
      result = result && (getSequence()
          == other.getSequence());
      result = result && unknownFields.equals(other.unknownFields);
      return result;
    }

    @java.lang.Override
    public int hashCode() {
      if (memoizedHashCode != 0) {
        return memoizedHashCode;
      }
      int hash = 41;
      hash = (19 * hash) + getDescriptor().hashCode();
      if (hasPublicKey()) {
        hash = (37 * hash) + PUBLIC_KEY_FIELD_NUMBER;
        hash = (53 * hash) + getPublicKey().hashCode();
      }
      if (hasData()) {
        hash = (37 * hash) + DATA_FIELD_NUMBER;
        hash = (53 * hash) + getData().hashCode();
      }
      hash = (37 * hash) + SEQUENCE_FIELD_NUMBER;
      hash = (53 * hash) + com.google.protobuf.Internal.hashLong(
          getSequence());
      hash = (29 * hash) + unknownFields.hashCode();
      memoizedHashCode = hash;
      return hash;
    }

    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor parseFrom(
        java.nio.ByteBuffer data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor parseFrom(
        java.nio.ByteBuffer data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor parseFrom(
        com.google.protobuf.ByteString data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor parseFrom(
        com.google.protobuf.ByteString data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor parseFrom(byte[] data)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor parseFrom(
        byte[] data,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return PARSER.parseFrom(data, extensionRegistry);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor parseFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor parseFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor parseDelimitedFrom(java.io.InputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor parseDelimitedFrom(
        java.io.InputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input);
    }
    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor parseFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      return com.google.protobuf.GeneratedMessageV3
          .parseWithIOException(PARSER, input, extensionRegistry);
    }

    @java.lang.Override
    public Builder newBuilderForType() { return newBuilder(); }
    public static Builder newBuilder() {
      return DEFAULT_INSTANCE.toBuilder();
    }
    public static Builder newBuilder(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor prototype) {
      return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
    }
    @java.lang.Override
    public Builder toBuilder() {
      return this == DEFAULT_INSTANCE
          ? new Builder() : new Builder().mergeFrom(this);
    }

    @java.lang.Override
    protected Builder newBuilderForType(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      Builder builder = new Builder(parent);
      return builder;
    }
    /**
     * <pre>
     * SignatureDescriptor is a convenience type which represents the full data for
     * a signature including the public key of the signer, signing modes and the
     * signature itself. It is primarily used for coordinating signatures between
     * clients.
     * </pre>
     *
     * Protobuf type {@code cosmos.tx.signing.v1beta1.SignatureDescriptor}
     */
    public static final class Builder extends
        com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
        // @@protoc_insertion_point(builder_implements:cosmos.tx.signing.v1beta1.SignatureDescriptor)
        proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptorOrBuilder {
      public static final com.google.protobuf.Descriptors.Descriptor
          getDescriptor() {
        return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_descriptor;
      }

      @java.lang.Override
      protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
          internalGetFieldAccessorTable() {
        return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_fieldAccessorTable
            .ensureFieldAccessorsInitialized(
                proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.class, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Builder.class);
      }

      // Construct using proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.newBuilder()
      private Builder() {
        maybeForceBuilderInitialization();
      }

      private Builder(
          com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
        super(parent);
        maybeForceBuilderInitialization();
      }
      private void maybeForceBuilderInitialization() {
        if (com.google.protobuf.GeneratedMessageV3
                .alwaysUseFieldBuilders) {
        }
      }
      @java.lang.Override
      public Builder clear() {
        super.clear();
        if (publicKeyBuilder_ == null) {
          publicKey_ = null;
        } else {
          publicKey_ = null;
          publicKeyBuilder_ = null;
        }
        if (dataBuilder_ == null) {
          data_ = null;
        } else {
          data_ = null;
          dataBuilder_ = null;
        }
        sequence_ = 0L;

        return this;
      }

      @java.lang.Override
      public com.google.protobuf.Descriptors.Descriptor
          getDescriptorForType() {
        return proto.cosmos.tx.signing.v1beta1.Signing.internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_descriptor;
      }

      @java.lang.Override
      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor getDefaultInstanceForType() {
        return proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.getDefaultInstance();
      }

      @java.lang.Override
      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor build() {
        proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor result = buildPartial();
        if (!result.isInitialized()) {
          throw newUninitializedMessageException(result);
        }
        return result;
      }

      @java.lang.Override
      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor buildPartial() {
        proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor result = new proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor(this);
        if (publicKeyBuilder_ == null) {
          result.publicKey_ = publicKey_;
        } else {
          result.publicKey_ = publicKeyBuilder_.build();
        }
        if (dataBuilder_ == null) {
          result.data_ = data_;
        } else {
          result.data_ = dataBuilder_.build();
        }
        result.sequence_ = sequence_;
        onBuilt();
        return result;
      }

      @java.lang.Override
      public Builder clone() {
        return (Builder) super.clone();
      }
      @java.lang.Override
      public Builder setField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.setField(field, value);
      }
      @java.lang.Override
      public Builder clearField(
          com.google.protobuf.Descriptors.FieldDescriptor field) {
        return (Builder) super.clearField(field);
      }
      @java.lang.Override
      public Builder clearOneof(
          com.google.protobuf.Descriptors.OneofDescriptor oneof) {
        return (Builder) super.clearOneof(oneof);
      }
      @java.lang.Override
      public Builder setRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          int index, java.lang.Object value) {
        return (Builder) super.setRepeatedField(field, index, value);
      }
      @java.lang.Override
      public Builder addRepeatedField(
          com.google.protobuf.Descriptors.FieldDescriptor field,
          java.lang.Object value) {
        return (Builder) super.addRepeatedField(field, value);
      }
      @java.lang.Override
      public Builder mergeFrom(com.google.protobuf.Message other) {
        if (other instanceof proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor) {
          return mergeFrom((proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor)other);
        } else {
          super.mergeFrom(other);
          return this;
        }
      }

      public Builder mergeFrom(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor other) {
        if (other == proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.getDefaultInstance()) return this;
        if (other.hasPublicKey()) {
          mergePublicKey(other.getPublicKey());
        }
        if (other.hasData()) {
          mergeData(other.getData());
        }
        if (other.getSequence() != 0L) {
          setSequence(other.getSequence());
        }
        this.mergeUnknownFields(other.unknownFields);
        onChanged();
        return this;
      }

      @java.lang.Override
      public final boolean isInitialized() {
        return true;
      }

      @java.lang.Override
      public Builder mergeFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws java.io.IOException {
        proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor parsedMessage = null;
        try {
          parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
        } catch (com.google.protobuf.InvalidProtocolBufferException e) {
          parsedMessage = (proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor) e.getUnfinishedMessage();
          throw e.unwrapIOException();
        } finally {
          if (parsedMessage != null) {
            mergeFrom(parsedMessage);
          }
        }
        return this;
      }

      private com.google.protobuf.Any publicKey_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> publicKeyBuilder_;
      /**
       * <pre>
       * public_key is the public key of the signer
       * </pre>
       *
       * <code>.google.protobuf.Any public_key = 1;</code>
       */
      public boolean hasPublicKey() {
        return publicKeyBuilder_ != null || publicKey_ != null;
      }
      /**
       * <pre>
       * public_key is the public key of the signer
       * </pre>
       *
       * <code>.google.protobuf.Any public_key = 1;</code>
       */
      public com.google.protobuf.Any getPublicKey() {
        if (publicKeyBuilder_ == null) {
          return publicKey_ == null ? com.google.protobuf.Any.getDefaultInstance() : publicKey_;
        } else {
          return publicKeyBuilder_.getMessage();
        }
      }
      /**
       * <pre>
       * public_key is the public key of the signer
       * </pre>
       *
       * <code>.google.protobuf.Any public_key = 1;</code>
       */
      public Builder setPublicKey(com.google.protobuf.Any value) {
        if (publicKeyBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          publicKey_ = value;
          onChanged();
        } else {
          publicKeyBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <pre>
       * public_key is the public key of the signer
       * </pre>
       *
       * <code>.google.protobuf.Any public_key = 1;</code>
       */
      public Builder setPublicKey(
          com.google.protobuf.Any.Builder builderForValue) {
        if (publicKeyBuilder_ == null) {
          publicKey_ = builderForValue.build();
          onChanged();
        } else {
          publicKeyBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <pre>
       * public_key is the public key of the signer
       * </pre>
       *
       * <code>.google.protobuf.Any public_key = 1;</code>
       */
      public Builder mergePublicKey(com.google.protobuf.Any value) {
        if (publicKeyBuilder_ == null) {
          if (publicKey_ != null) {
            publicKey_ =
              com.google.protobuf.Any.newBuilder(publicKey_).mergeFrom(value).buildPartial();
          } else {
            publicKey_ = value;
          }
          onChanged();
        } else {
          publicKeyBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <pre>
       * public_key is the public key of the signer
       * </pre>
       *
       * <code>.google.protobuf.Any public_key = 1;</code>
       */
      public Builder clearPublicKey() {
        if (publicKeyBuilder_ == null) {
          publicKey_ = null;
          onChanged();
        } else {
          publicKey_ = null;
          publicKeyBuilder_ = null;
        }

        return this;
      }
      /**
       * <pre>
       * public_key is the public key of the signer
       * </pre>
       *
       * <code>.google.protobuf.Any public_key = 1;</code>
       */
      public com.google.protobuf.Any.Builder getPublicKeyBuilder() {
        
        onChanged();
        return getPublicKeyFieldBuilder().getBuilder();
      }
      /**
       * <pre>
       * public_key is the public key of the signer
       * </pre>
       *
       * <code>.google.protobuf.Any public_key = 1;</code>
       */
      public com.google.protobuf.AnyOrBuilder getPublicKeyOrBuilder() {
        if (publicKeyBuilder_ != null) {
          return publicKeyBuilder_.getMessageOrBuilder();
        } else {
          return publicKey_ == null ?
              com.google.protobuf.Any.getDefaultInstance() : publicKey_;
        }
      }
      /**
       * <pre>
       * public_key is the public key of the signer
       * </pre>
       *
       * <code>.google.protobuf.Any public_key = 1;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder> 
          getPublicKeyFieldBuilder() {
        if (publicKeyBuilder_ == null) {
          publicKeyBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              com.google.protobuf.Any, com.google.protobuf.Any.Builder, com.google.protobuf.AnyOrBuilder>(
                  getPublicKey(),
                  getParentForChildren(),
                  isClean());
          publicKey_ = null;
        }
        return publicKeyBuilder_;
      }

      private proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data data_ = null;
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Builder, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.DataOrBuilder> dataBuilder_;
      /**
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
       */
      public boolean hasData() {
        return dataBuilder_ != null || data_ != null;
      }
      /**
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
       */
      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data getData() {
        if (dataBuilder_ == null) {
          return data_ == null ? proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.getDefaultInstance() : data_;
        } else {
          return dataBuilder_.getMessage();
        }
      }
      /**
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
       */
      public Builder setData(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data value) {
        if (dataBuilder_ == null) {
          if (value == null) {
            throw new NullPointerException();
          }
          data_ = value;
          onChanged();
        } else {
          dataBuilder_.setMessage(value);
        }

        return this;
      }
      /**
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
       */
      public Builder setData(
          proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Builder builderForValue) {
        if (dataBuilder_ == null) {
          data_ = builderForValue.build();
          onChanged();
        } else {
          dataBuilder_.setMessage(builderForValue.build());
        }

        return this;
      }
      /**
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
       */
      public Builder mergeData(proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data value) {
        if (dataBuilder_ == null) {
          if (data_ != null) {
            data_ =
              proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.newBuilder(data_).mergeFrom(value).buildPartial();
          } else {
            data_ = value;
          }
          onChanged();
        } else {
          dataBuilder_.mergeFrom(value);
        }

        return this;
      }
      /**
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
       */
      public Builder clearData() {
        if (dataBuilder_ == null) {
          data_ = null;
          onChanged();
        } else {
          data_ = null;
          dataBuilder_ = null;
        }

        return this;
      }
      /**
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
       */
      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Builder getDataBuilder() {
        
        onChanged();
        return getDataFieldBuilder().getBuilder();
      }
      /**
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
       */
      public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.DataOrBuilder getDataOrBuilder() {
        if (dataBuilder_ != null) {
          return dataBuilder_.getMessageOrBuilder();
        } else {
          return data_ == null ?
              proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.getDefaultInstance() : data_;
        }
      }
      /**
       * <code>.cosmos.tx.signing.v1beta1.SignatureDescriptor.Data data = 2;</code>
       */
      private com.google.protobuf.SingleFieldBuilderV3<
          proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Builder, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.DataOrBuilder> 
          getDataFieldBuilder() {
        if (dataBuilder_ == null) {
          dataBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
              proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.Data.Builder, proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor.DataOrBuilder>(
                  getData(),
                  getParentForChildren(),
                  isClean());
          data_ = null;
        }
        return dataBuilder_;
      }

      private long sequence_ ;
      /**
       * <pre>
       * sequence is the sequence of the account, which describes the
       * number of committed transactions signed by a given address. It is used to prevent
       * replay attacks.
       * </pre>
       *
       * <code>uint64 sequence = 3;</code>
       */
      public long getSequence() {
        return sequence_;
      }
      /**
       * <pre>
       * sequence is the sequence of the account, which describes the
       * number of committed transactions signed by a given address. It is used to prevent
       * replay attacks.
       * </pre>
       *
       * <code>uint64 sequence = 3;</code>
       */
      public Builder setSequence(long value) {
        
        sequence_ = value;
        onChanged();
        return this;
      }
      /**
       * <pre>
       * sequence is the sequence of the account, which describes the
       * number of committed transactions signed by a given address. It is used to prevent
       * replay attacks.
       * </pre>
       *
       * <code>uint64 sequence = 3;</code>
       */
      public Builder clearSequence() {
        
        sequence_ = 0L;
        onChanged();
        return this;
      }
      @java.lang.Override
      public final Builder setUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.setUnknownFieldsProto3(unknownFields);
      }

      @java.lang.Override
      public final Builder mergeUnknownFields(
          final com.google.protobuf.UnknownFieldSet unknownFields) {
        return super.mergeUnknownFields(unknownFields);
      }


      // @@protoc_insertion_point(builder_scope:cosmos.tx.signing.v1beta1.SignatureDescriptor)
    }

    // @@protoc_insertion_point(class_scope:cosmos.tx.signing.v1beta1.SignatureDescriptor)
    private static final proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor DEFAULT_INSTANCE;
    static {
      DEFAULT_INSTANCE = new proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor();
    }

    public static proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor getDefaultInstance() {
      return DEFAULT_INSTANCE;
    }

    private static final com.google.protobuf.Parser<SignatureDescriptor>
        PARSER = new com.google.protobuf.AbstractParser<SignatureDescriptor>() {
      @java.lang.Override
      public SignatureDescriptor parsePartialFrom(
          com.google.protobuf.CodedInputStream input,
          com.google.protobuf.ExtensionRegistryLite extensionRegistry)
          throws com.google.protobuf.InvalidProtocolBufferException {
        return new SignatureDescriptor(input, extensionRegistry);
      }
    };

    public static com.google.protobuf.Parser<SignatureDescriptor> parser() {
      return PARSER;
    }

    @java.lang.Override
    public com.google.protobuf.Parser<SignatureDescriptor> getParserForType() {
      return PARSER;
    }

    @java.lang.Override
    public proto.cosmos.tx.signing.v1beta1.Signing.SignatureDescriptor getDefaultInstanceForType() {
      return DEFAULT_INSTANCE;
    }

  }

  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptors_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptors_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Single_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Single_fieldAccessorTable;
  private static final com.google.protobuf.Descriptors.Descriptor
    internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Multi_descriptor;
  private static final 
    com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Multi_fieldAccessorTable;

  public static com.google.protobuf.Descriptors.FileDescriptor
      getDescriptor() {
    return descriptor;
  }
  private static  com.google.protobuf.Descriptors.FileDescriptor
      descriptor;
  static {
    java.lang.String[] descriptorData = {
      "\n\'cosmos/tx/signing/v1beta1/signing.prot" +
      "o\022\031cosmos.tx.signing.v1beta1\032-cosmos/cry" +
      "pto/multisig/v1beta1/multisig.proto\032\031goo" +
      "gle/protobuf/any.proto\"Z\n\024SignatureDescr" +
      "iptors\022B\n\nsignatures\030\001 \003(\0132..cosmos.tx.s" +
      "igning.v1beta1.SignatureDescriptor\"\244\004\n\023S" +
      "ignatureDescriptor\022(\n\npublic_key\030\001 \001(\0132\024" +
      ".google.protobuf.Any\022A\n\004data\030\002 \001(\01323.cos" +
      "mos.tx.signing.v1beta1.SignatureDescript" +
      "or.Data\022\020\n\010sequence\030\003 \001(\004\032\215\003\n\004Data\022L\n\006si" +
      "ngle\030\001 \001(\0132:.cosmos.tx.signing.v1beta1.S" +
      "ignatureDescriptor.Data.SingleH\000\022J\n\005mult" +
      "i\030\002 \001(\01329.cosmos.tx.signing.v1beta1.Sign" +
      "atureDescriptor.Data.MultiH\000\032N\n\006Single\0221" +
      "\n\004mode\030\001 \001(\0162#.cosmos.tx.signing.v1beta1" +
      ".SignMode\022\021\n\tsignature\030\002 \001(\014\032\223\001\n\005Multi\022A" +
      "\n\010bitarray\030\001 \001(\0132/.cosmos.crypto.multisi" +
      "g.v1beta1.CompactBitArray\022G\n\nsignatures\030" +
      "\002 \003(\01323.cosmos.tx.signing.v1beta1.Signat" +
      "ureDescriptor.DataB\005\n\003sum*s\n\010SignMode\022\031\n" +
      "\025SIGN_MODE_UNSPECIFIED\020\000\022\024\n\020SIGN_MODE_DI" +
      "RECT\020\001\022\025\n\021SIGN_MODE_TEXTUAL\020\002\022\037\n\033SIGN_MO" +
      "DE_LEGACY_AMINO_JSON\020\177B!\n\037proto.cosmos.t" +
      "x.signing.v1beta1b\006proto3"
    };
    com.google.protobuf.Descriptors.FileDescriptor.InternalDescriptorAssigner assigner =
        new com.google.protobuf.Descriptors.FileDescriptor.    InternalDescriptorAssigner() {
          public com.google.protobuf.ExtensionRegistry assignDescriptors(
              com.google.protobuf.Descriptors.FileDescriptor root) {
            descriptor = root;
            return null;
          }
        };
    com.google.protobuf.Descriptors.FileDescriptor
      .internalBuildGeneratedFileFrom(descriptorData,
        new com.google.protobuf.Descriptors.FileDescriptor[] {
          proto.cosmos.crypto.multisig.v1beta1.Multisig.getDescriptor(),
          com.google.protobuf.AnyProto.getDescriptor(),
        }, assigner);
    internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptors_descriptor =
      getDescriptor().getMessageTypes().get(0);
    internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptors_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptors_descriptor,
        new java.lang.String[] { "Signatures", });
    internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_descriptor =
      getDescriptor().getMessageTypes().get(1);
    internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_descriptor,
        new java.lang.String[] { "PublicKey", "Data", "Sequence", });
    internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_descriptor =
      internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_descriptor.getNestedTypes().get(0);
    internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_descriptor,
        new java.lang.String[] { "Single", "Multi", "Sum", });
    internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Single_descriptor =
      internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_descriptor.getNestedTypes().get(0);
    internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Single_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Single_descriptor,
        new java.lang.String[] { "Mode", "Signature", });
    internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Multi_descriptor =
      internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_descriptor.getNestedTypes().get(1);
    internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Multi_fieldAccessorTable = new
      com.google.protobuf.GeneratedMessageV3.FieldAccessorTable(
        internal_static_cosmos_tx_signing_v1beta1_SignatureDescriptor_Data_Multi_descriptor,
        new java.lang.String[] { "Bitarray", "Signatures", });
    proto.cosmos.crypto.multisig.v1beta1.Multisig.getDescriptor();
    com.google.protobuf.AnyProto.getDescriptor();
  }

  // @@protoc_insertion_point(outer_class_scope)
}
